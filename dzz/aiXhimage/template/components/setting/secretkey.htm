<div class="content" v-loading="btnloading">
    <el-form :model="secretkeyruleForm" :rules="secretkeyrules" ref="fsecretkeyruleForm" label-width="120px" label-suffix="ï¼š">
        <el-form-item label="APPID" prop="appid">
            <el-input class="maxWidth" v-model.trim="secretkeyruleForm.appid"></el-input>
            <el-text type="info" class="tipTxt" size="small">APPID</el-text>
        </el-form-item>

        <el-form-item label="APISecret" prop="sk">
            <el-input class="maxWidth" v-model.trim="secretkeyruleForm.sk"></el-input>
            <el-text type="info" class="tipTxt" size="small">APISecret</el-text>
        </el-form-item>
        <el-form-item label="APIKey" prop="ak">
            <el-input class="maxWidth" v-model.trim="secretkeyruleForm.ak"></el-input>
            <el-text type="info" class="tipTxt" size="small">APIKey</el-text>
        </el-form-item>
        <el-form-item label="{lang status}">
            <el-switch
                v-model="secretkeyruleForm.status"
                active-text="{lang enable}"
                inactive-text="{lang close}"
                :active-value="1"
                :inactive-value="0"
            ></el-switch>
            <el-text type="info" class="tipTxt" size="small">{lang status_tip}</el-text>
        </el-form-item>
        <el-form-item>
            <el-button type="primary" @click="secretkeySubmit">{lang save}</el-button>
        </el-form-item>
    </el-form>
</div>
<script>
    let secretkeyMixin = {
        data() {
			return {
				secretkeyruleForm: {
					appid:"$setting['appid']",
					ak:"$setting['ak']",
					sk:"$setting['sk']",
					status:$setting['status']
				},
				secretkeyrules: {
					appid: [
						{ required: true, message: '{lang forcesecques_cannot_empty}', trigger: 'blur' }
					],
					ak: [
						{ required: true, message: '{lang forcesecques_cannot_empty}', trigger: 'blur' }
					],
					sk: [
						{ required: true, message: '{lang forcesecques_cannot_empty}', trigger: 'blur' }
					]
				},
			}
		},
        methods: {
			secretkeySubmit(){
				var self = this;
				self.$refs.fsecretkeyruleForm.validate(async function(valid){
					if (valid) {
						var params = {
							'settingsumbit':true,
							'formhash':'{FORMHASH}',
							'appid':self.secretkeyruleForm.appid,
							'ak':self.secretkeyruleForm.ak,
							'sk':self.secretkeyruleForm.sk,
							'status':self.secretkeyruleForm.status,
						};
						
						self.btnloading = true;
						const {data: res} = await axios.post('{MOD_URL}&op=setting',params);
						if(res.success){
							 self.$message({
							 	message: '{lang save_success}',
							 	type: 'success'
							 });
							window.location.reload();
						}else{
							self.btnloading = false;
							self.$message.error(res.msg || '{lang submit_error}');
						}
				    
					} else {
						self.$message.error('{lang verify_fail}');
						self.btnloading = false;
						return false;
					}
				});
			}
		},
    }
</script>